name: IAR-CMSIS-DSP CI

on:
  schedule:
  - cron: '45 4 * * *'
  workflow_dispatch:
  push:
    paths-ignore:
      - 'README.md'    

# Set a new GitHub Actions Secret named IAR_LMS_BEARER_TOKEN
# for your repository. The secret is then propagated to an
# Environment variable used for all jobs within this workflow
env:
  IAR_LMS_BEARER_TOKEN: ${{ secrets.IAR_LMS_BEARER_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        arch:
        - cortexM0l
        - cortexM0b
        - cortexM3l
        - cortexM3b
        - cortexM4l
        - cortexM4b
        - cortexM4lf
        - cortexM4bf
        - cortexM7l
        - cortexM7ls
        - cortexM7lf
        - cortexM7b
        - cortexM7bs
        - cortexM7bf
        - ARMv8MBLl
        - ARMv8MMLl
        - ARMv8MMLld
        - ARMv8MMLlfsp
        - ARMv8MMLlfdp
        - ARMv8MMLldfsp
        - ARMv8MMLldfdp
        - ARMv81MMLld
        - ARMv81MMLldfdp
        - ARMv81MMLldfdph
    container:
      image: ghcr.io/iarsystems/arm
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'
    - name: Set environment
      run: |
        echo "IAR_CMSIS_DSP=${{ github.workspace }}" >> $GITHUB_ENV
    - name: Build libraries
      run: |
        iarbuild Library/arm_cortexM_math.ewp -build ${{ matrix.arch }} -log all -parallel `nproc`
    - name: Upload artifacts
      if: matrix.arch == 'cortexM4lf'
      uses: actions/upload-artifact@v4
      with:
        name: iar_${{ matrix.arch }}_math.a
        compression-level: 9
        path: |
          **/*.a

  run:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        arch:
        - cortexM4lf
        example:
        - arm_bayes_example          
        - arm_convolution_example
        - arm_dotproduct_example
        - arm_fft_bin_example
        - arm_fir_example
        - arm_graphic_equalizer_example
        - arm_linear_interp_example
        - arm_matrix_example
        - arm_signal_converge_example
        - arm_sin_cos_example
        - arm_svm_example
        - arm_variance_example
    container:
      image: ghcr.io/iarsystems/arm
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'
    - name: Set environment
      run: |
        echo "IAR_CMSIS_DSP=${{ github.workspace }}" >> $GITHUB_ENV
    - name: Download library
      uses: actions/download-artifact@v4
      with:
        name: iar_${{ matrix.arch }}_math.a
        path: ${{ github.workspace }}
    - name: Build example
      run: |
        iarbuild Examples/${{ matrix.example }}.ewp -build "*" -log all -parallel `nproc`
    - name: Run example
      run: |
        CSpyBat \
          /opt/iar/cxarm/arm/bin/libarmPROC.so \
          /opt/iar/cxarm/arm/bin/libarmSIM2.so \
          --plugin=/opt/iar/cxarm/arm/bin/libarmLibsupportUniversal.so \
          --debug_file=${GITHUB_WORKSPACE}/Examples/${{ matrix.arch }}/Exe/${{ matrix.example }}.out \
          --timeout=2000000 \
          --backend \
            --cpu=cortex-m4 \
            --fpu=vfpv4_sp \
            --endian=little \
            --semihosting
